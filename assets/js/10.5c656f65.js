(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{167:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"_11-연산자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-연산자","aria-hidden":"true"}},[t._v("#")]),t._v(" 11. 연산자")]),t._v(" "),a("h2",{attrs:{id:"연산자의-두-가지-중요한-규칙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#연산자의-두-가지-중요한-규칙","aria-hidden":"true"}},[t._v("#")]),t._v(" 연산자의 두 가지 중요한 규칙")]),t._v(" "),a("ul",[a("li",[t._v("연산자는 피연산자를 적절한 타입으로 강제 변환한다")]),t._v(" "),a("li",[t._v("대부분의 연산자는 오직 원시 값하고만 작동한다")])]),t._v(" "),a("h3",{attrs:{id:"연산자는-피연산자를-적절한-타입으로-강제-변환한다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#연산자는-피연산자를-적절한-타입으로-강제-변환한다","aria-hidden":"true"}},[t._v("#")]),t._v(" 연산자는 피연산자를 적절한 타입으로 강제 변환한다")]),t._v(" "),a("p",[t._v("연산자는 적절하지 않은 타입의 피연산자를 만나도 예외를 거의 발생시키지 않는다. 대신 연산자와 작동 할 수 있도록 피연산자를 강제 변환(자동 변환)한다. 두 가지 예를 보자.")]),t._v(" "),a("p",[t._v("첫째, 곱셈 연산자는 오직 number하고만 작동한다. 따라서 결과를 계산하기 전에 string을 number로 변환한다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'7'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 21")]),t._v("\n")])])]),a("p",[t._v("둘째, 객체의 프로퍼티에 접근하기 위한 대괄호 연산자("),a("code",[t._v("[ ]")]),t._v(")는 string과 symbol만 처리 할 수 있다. 다른 모든 값은 string으로 강제 변환된다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v("'true'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("123")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// true를 'true'로 강제 변환한다.")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n")])])]),a("h3",{attrs:{id:"대부분의-연산자는-오직-원시-값하고만-작동한다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#대부분의-연산자는-오직-원시-값하고만-작동한다","aria-hidden":"true"}},[t._v("#")]),t._v(" 대부분의 연산자는 오직 원시 값하고만 작동한다")]),t._v(" "),a("p",[t._v("JavaScript 연산자의 기억해야 할 주요 규칙은")]),t._v(" "),a("p",[a("code",[t._v("대부분의 연산자는 오직 원시 값하고만 작동한다")])]),t._v(" "),a("p",[t._v("이다.")]),t._v(" "),a("p",[t._v("피연산자가 객체일 때, 일반적으로 원시 값으로 강제 변환된다.")]),t._v(" "),a("p",[t._v("예:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// '1,2,34,5,6'")]),t._v("\n")])])]),a("p",[t._v("왜? 덧셈 연산자는 먼저 피연산자를 원시 값으로 강제 변환한다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// '1,2,3'")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// '4,5,6'")]),t._v("\n")])])]),a("p",[t._v("그 다음 두 string을 연결한다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'1,2,3'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'4,5,6'")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// '1,2,34,5,6'")]),t._v("\n")])])]),a("h2",{attrs:{id:"덧셈-연산자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#덧셈-연산자","aria-hidden":"true"}},[t._v("#")]),t._v(" 덧셈 연산자 (+)")]),t._v(" "),a("p",[t._v("덧셈 연산자는 JavaScript에서 다음과 같이 작동한다. 먼저 두 피연산자를 원시 값으로 변환한다. 그런 다음 두 모드 중 하나로 전환한다.")]),t._v(" "),a("ul",[a("li",[t._v("string 모드: 두 결과 중 하나가 string이면 다른 결과도 string으로 변환하고 두 string을 연결한다.")]),t._v(" "),a("li",[t._v("number 모드: 그렇지 않으면 두 피연산자를 number로 변환하고 더한다.")])]),t._v(" "),a("p",[t._v("String mode lets you use + to assemble strings:")])])}],!1,null,null,null);e.options.__file="operators.md";s.default=e.exports}}]);